id: SQLI-GET-1 #Unique id of template

info:
  name: SQL Injection
  author: coder_rc #Don't use @ here
  severity: Critical
  category: SQL Injection
  language: en
  required: #List of variables required in report.
    - url
    - param
    - reporter_username
    - steps
    - impact
    - remediation
  # - org_name

report:
  summary: "## Summary\n
Hello there,
I hope you are doing great!,\n
I have found a SQL Injection vulnerability on one of the [domain]({{host}}) mentioned in the scope.\n

Vulnerable host: {{host}}
\nVulnerable parameter: {{param}}
"
  steps: "## Steps to reproduce:
\n1. Open {{host}}{{param}} and see the response, you will see that the response contains a SQL error.
\nThis can be further exploited by sqlmap, by using this command you can check the current database: sqlmap -u {{host}}{{param}} --current-db"

  impact: "## Impact
\nAn attacker can use SQL injection it to bypass a web applicationâ€™s authentication and authorization mechanisms and retrieve the contents of an entire database.
\nSQLi can also be used to add, modify and delete records in a database, affecting data integrity.
\nUnder the right circumstances, SQLi can also be used by an attacker to execute OS commands, which may then be used to escalate an attack even further."

  remediation: "## Mitigation
\nSanitize all the user inputs."
  end: "Best regards,
\n{{username}}
"
